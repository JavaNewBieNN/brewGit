name: Pi Auto Test

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  pi-runner-job:
    runs-on: self-hosted

    steps:
      - name: Test if runner works
        run: echo "✅ Runner is working!"


      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Python, pip if needed
        run: |
          which python3 || sudo apt update && sudo apt install -y python3 python3-pip    # if front cli failed than execute the next

      - name: Install JDK
        run: |
          which java || sudo apt install -y openjdk-17-jdk

      - name: Ensure curl is installed
        run: |
          which curl || (sudo apt update && sudo apt install curl -y)

      - name: Install Homebrew And Allure(if not exists)   # have to install brew and allure at one run command cause 1 run is i terminal
        run: |
          if ! command -v brew &>/dev/null; then
            echo "Installing Homebrew..."
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          fi
          
          # add PATH temporarily ， have effect only on current step
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          
          # install allure
          which allure || brew install allure
          

      - name: Setup virtual environment & install requirements
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt


      - name: Install success
        run: |
          echo "all installments are good!"



      - name: generate allure report
        run: |
          cd test_learning/pytest_
          source ../../.venv/bin/activate
          echo "Starting tests"
          python generate_allure.py
          echo "allure generated"


      - name: pack report
        run: |
          cd test_learning/pytest_
          tar -czf report.tar.gz report         # tar linux archive tools
          echo "pack action successful"         # -c means creat
                                                # -z uses gzip .gz
                                                # -f means output file name is 'report.tar.gz'
                                                # report is the target folder

      - name: send report
        run: |                                  # /home/<username>/actions-runner/_work/<repo-name>/<repo-name>
          cd test_learning/pytest_
          source ../../.venv/bin/activate
          python open_and_send_report.py
          echo "send the report successful"
